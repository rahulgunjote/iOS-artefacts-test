name: File Upload Download Workflow

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  actions: write
  checks: write
  pull-requests: write

jobs:
  upload_file_1:
    runs-on: macos-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Upload file 1
      uses: actions/upload-artifact@v4
      with:
        name: Test-1
        path: TestResults/Test-1.xcresult

  upload_file_2:
    runs-on: macos-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Create sample file 2
      run: echo "This is file 2 content" > file2.txt
      
    - name: Upload file 2
      uses: actions/upload-artifact@v4
      with:
        name: Test-2
        path: TestResults/Test-2.xcresult

  download_files:
    needs: [upload_file_1, upload_file_2]
    runs-on: macos-latest
    steps:
    - name: Download file 1
      uses: actions/download-artifact@v4
      with:
        name: Test-1
        path: DownloadedTestResults/Test-1.xcresult
        
    - name: Download file 2
      uses: actions/download-artifact@v4
      with:
        name: Test-2
        path: DownloadedTestResults/Test-2.xcresult
    - name: Display Test-1
      if: always()
      uses: dorny/test-reporter@v1.9.1
      with:
          name: 📝 Test Report 1
          path: "DownloadedTestResults/Test-1.xcresult"
          reporter: swift-xunit
          list-tests: 'failed'
    - name: Display Test-2
      if: always()
      uses: dorny/test-reporter@v1.9.1
      with:
          name: 📝 Test Report 2
          path: "DownloadedTestResults/Test-2.xcresult"
          reporter: swift-xunit
          list-tests: 'failed'
    - name: Display file contents
      run: |
        ls -la DownloadedTestResults
